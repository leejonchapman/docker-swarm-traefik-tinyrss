version: "3.5"
services:
  servicerss:
    image: wangqiru/ttrss:latest
    networks:
      - internal
    environment:
      SELF_URL_PATH: https://tinyrss.leejonchapman.com/ # please change to your own domain
      DB_HOST: ##### Fill in
      DB_PORT: 5432
      DB_NAME: ##### Fill in
      DB_USER: ##### Fill in
      DB_PASS: ##### Fill in
      ENABLE_PLUGINS: auth_internal,fever # auth_internal is required. Plugins enabled here will be enabled for all users as system plugins
    stdin_open: true
    tty: true
    command: sh -c 'sh /wait-for.sh $$DB_HOST:$$DB_PORT -- php /configure-db.php && exec s6-svscan /etc/s6/'
    deploy:
      labels:
        traefik.enable: "true"
        traefik.backend: "tinyrss"
        traefik.docker.network: "internal"
        traefik.frontend.rule: "Host:tinyrss.leejonchapman.com"
        traefik.web.port: "80"
        traefik.frontend.headers.SSLRedirect: "true"
        traefik.frontend.headers.SSLHost: "tinyrss.leejonchapman.com"
      placement:
        constraints:
          - node.role == worker
      mode: global
 ###
 ###
 ###     
  servicemercury: # set Mercury Parser API endpoint to `servicemercury:3000` on TTRSS plugin setting page
    image: wangqiru/mercury-parser-api:latest
    depends_on: 
      - servicerss
    container_name: mercury
    expose:
      - 3000
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: global
###
###
###
  serivceopencc: # set OpenCC API endpoint to `serivceopencc:3000` on TTRSS plugin setting page
    image: wangqiru/opencc-api-server:latest
    depends_on: 
      - servicerss
    container_name: opencc
    environment:
      - NODE_ENV=production
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: global
      restart_policy:
        condition: any
        max_attempts: 3
  # utility.watchtower:
  #   container_name: watchtower
  #   image: containrrr/watchtower:latest
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=86400
  #   restart: always
networks:
  internal:
    name: internal
    external: true
